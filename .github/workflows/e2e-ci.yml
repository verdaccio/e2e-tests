name: E2E CLI

concurrency:
  group: e2e-cli-${{ github.ref }}
  cancel-in-progress: true  


on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 6.x
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Use Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: '.nvmrc'
      - name: corepack
        run: corepack enable
      - name: pnpm enable
        run: corepack prepare pnpm@latest-8 --activate
      - name: set store
        run: |
          mkdir ~/.pnpm-store
          pnpm config set store-dir ~/.pnpm-store
      - name: Set up .npmrc
        run: |
          echo "//rg.verdaccio.org/:_authToken=${{ secrets.VERDACCIO_TOKEN }}" > .npmrc          
      - name: registry
        run: npm config set registry https://rg.verdaccio.org
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache PNPM Store
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ github.sha }}
            pnpm-

      - name: Build Project
        run: pnpm build

      - name: Cache Node Modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            modules-${{ github.sha }}
            modules-
      - name: Cache Tools Directory
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ./tools/
          key: tools-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            tools-${{ github.sha }}
            tools-
  e2e-cli:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        pkg: [npm7, npm8, npm9, npm10, npm11, pnpm8, pnpm9, pnpm10, yarn1, yarn2, yarn3, yarn4]
        node: [22]        
    name: ${{ matrix.pkg }}/ ubuntu-latest / ${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node }}
      - name: corepack
        run: npm install --global corepack@latest && corepack enable
      - name: pnpm enable
        run: corepack prepare pnpm@latest-8 --activate
      - name: Restore PNPM Store Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ github.sha }}
            pnpm-

      - name: Restore Node Modules Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: node_modules
          key: modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            modules-${{ github.sha }}
            modules-
      - name: Set up .npmrc
        run: |
          echo "//rg.verdaccio.org/:_authToken=${{ secrets.VERDACCIO_TOKEN }}" > .npmrc          
      - name: registry
        run: npm config set registry https://rg.verdaccio.org            
      - name: Install
        run: pnpm install --frozen-lockfile
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ./tools/
          key: pkg-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.run_id }}-${{ github.sha }}
      - name: Test CLI
        run: NODE_ENV=production pnpm test --filter ...@verdaccio/e2e-cli-${{matrix.pkg}} -- --reporter=json --outputFile=vitest-report-${{ matrix.pkg }}.json
      - name: Upload vitest reports as artifacts
        if: github.ref == 'refs/heads/6.x'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: vitest-reports-${{ matrix.pkg }}
          path: ./e2e/cli/e2e-${{ matrix.pkg }}/vitest-report-${{ matrix.pkg }}.json        
  collect-reports:
    needs: [e2e-cli]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Download vitest reports artifacts
        if: github.ref == 'refs/heads/6.x'
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          pattern: vitest-reports-*
          path: ./reports
      - name: Move reports to commit hash folder
        if: github.ref == 'refs/heads/6.x'
        run: |
          mkdir -p "./reports_copy/report_${{ github.sha }}/"  
          mv ./reports/* ./reports_copy/report_${{ github.sha }}/  
          rm -rf ./reports  
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/6.x'
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./reports_copy
          keep_files: true
